// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/create": {
            "post": {
                "description": "create song from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create song",
                "parameters": [
                    {
                        "description": "song struct",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NewSong"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.NewID"
                        }
                    },
                    "400": {
                        "description": "Bad request error"
                    },
                    "404": {
                        "description": "Not found error"
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/delete": {
            "delete": {
                "description": "delete song from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deleted"
                ],
                "summary": "Delete Song",
                "parameters": [
                    {
                        "type": "string",
                        "description": "song name",
                        "name": "song",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success response"
                    },
                    "400": {
                        "description": "Bad request error"
                    },
                    "404": {
                        "description": "Not found error"
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/search": {
            "post": {
                "description": "get songs from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data"
                ],
                "summary": "Get Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "first page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "count page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "filter information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FilterSong"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Song"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request error"
                    },
                    "404": {
                        "description": "Not found error"
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/text": {
            "post": {
                "description": "get text from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "text"
                ],
                "summary": "Get Text",
                "parameters": [
                    {
                        "type": "string",
                        "description": "first page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "count page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "song name",
                        "name": "song",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.TextSong"
                        }
                    },
                    "400": {
                        "description": "Bad request error"
                    },
                    "404": {
                        "description": "Not found error"
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/update": {
            "post": {
                "description": "update song from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update song",
                "parameters": [
                    {
                        "description": "update song",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FilterSong"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success response"
                    },
                    "400": {
                        "description": "Bad request error"
                    },
                    "404": {
                        "description": "Not found error"
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.FilterSong": {
            "description": "Filter song model info",
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "models.NewSong": {
            "description": "Song information about user",
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                }
            }
        },
        "models.Song": {
            "description": "Song information about the account",
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "server.NewID": {
            "description": "ID song",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "server.TextSong": {
            "description": "Text song",
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
